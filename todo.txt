todo
----
* oval
* RectBox (rounded corners)
* text
  * multi-line, paragraphs --> typesetting
  * horizontal / vertical alignment
  * font(s), sizes
  * styles (subscript, superscript, underline, strikethrough, bold, italics)
  * angled
* text on lines
* splines
* multi segment lines (perpendicular / non perpendicular)
* 'grouping' rectangles: text in the top left corner (or is that just a special use of RectBox?)
* bitmaps
* SVGs (--> Batik)
* 'model' layer

* Java 10

* features
  * add / remove styles
  * select arrow / line only when clicking close to the line itself, *not* on the entire bounding rectangle
  * add four missing resize handles
  * text style: font name, color
  * clean up 'filled triangle' and 'empty triangle'
  * create line by dragging: minimal initial movement sometimes causes neither 'dragged' nor 'released' to be fired --> SM hangs in 'drag' state
  * 'Current Style': dynamically update combo entries to reflect changes in the overall repository
  * Oval boundary for box (?)
  * move SelectShapeCommand to SelectionTracker --> any code that changes a selection automatically has Command support
  * dragging multiple shapes: unbind line ends only if bound shapes are not dragged as well
  * drag display by clicking on background
  * extract 'AbstractPoint' and 'AbstractRect' traits
  * stable UUIDs for 'standard' styles: 'load' empty diagram (?)
  * 'lock' on grid lines when moving boxes
  * explicit (editable) abstraction for 'gradient'
  * keyboard shortcut for styles?
  * TextDetailsForm: 'fit to text' checkbox
  * undo redo stack should merge commands (i.e. ask them to merge if they can
  * undo redo stack should support 'snapshot' for rollbacks --> 'cancel' / 'reset' in a dialog
  * dragging: combine 'move' and 'resize' into a single UI operation, i.e. apply the entire operation only after the new rendered image is available
  * 'bitmap' / 'clipart' shape
  * limit re-rendering of shapes during interactive 'resize' etc.
  * serialize update rendering per shape
    * delay re-rendering during drag: only one concurrently running re-rendering?
    * queue per shape (?), remove all but the latest
  * height / width of a box: derive from font
  * restore window position when leaving full screen mode
  * remove 'press ESC to leave full screen mode' message
  * add check marks to 'view' menu items
  * view menu: show / hide accordion
  * multi select
    * drag a rectangle around shapes
    * Shift+Click adds / removes
    * selection details form
  * '+' / '-' moves shape forward / backward in Z Order
  * When closing a window with a dirty diagram --> 'are you sure' dialog
  * grid (optional) in the background
  * Ctrl-Resize, Shift-Resize
  * Ctrl-Move, Shift-Move
  * line ends
    * full triangle
    * empty triangle
    * "elegant" arrow
  * dashed / dotted lines
  * different line style for lines 'behind' a box (e.g. dashed)
  * 'background boxes', i.e. borders used for visually grouping stuff
  * tool bar, status bar
  * tree view with the logical structure
  * manual / explicit *relative* correction for visual start / end point of lines (x / y / *axial* / *distance from box*)
  * text on line: correction (forward / backward and distance to line)
* JavaFX APIs
  * FontSmoothingType
  * lighting
  * reflection
  * changed menu item text --> re-render problem?!
* thoughts
  * shadow for lines (?)
  * sub-pixel anti-aliasing on rotated fonts

* problems (--> JavaFX 8?)
  * disable context menu for TextField (interferes with 'undo' / Ctrl+Z)
  * Stage with owner can still go to the background
  * Accordion allows unexpanding of all elements
  * repaint of changed menu item
  * hotkey 'Ctrl +' does not work (for zooming in)
  * File Chooser: no way to pre-fill file name field; filter *only* by file extension
  * slider: only linear scale, not logarithmic
  * restore window position when leaving full screen

* visual test suite (render to windows and files --> potentially different rendering engine?)
  * line endings at different angles and different line widths --> 'overlap' vs 'gap'

* show
  * digest loop
  * styleCells --> use of traits

done
----
* straight line
* line ends
* rendering
* render tests